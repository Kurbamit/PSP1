openapi: 3.0.3
info:
  title: Swagger [Project name] - OpenAPI 3.0
  description: |-
  version: 1.0.12
servers:
  - url: "/"
tags:
  - name: employee
    description: Operations related to Employee management
  - name: payment
    description: Operations related to Payments
  - name: discount
    description: Operations related to Discounts  
  - name: giftCard
    description: Operations related to GiftCard management
  - name: restaurant
    description: Operations related to Restaurant management
  - name: reservation
    description: Operations related to Reservation management
  - name: auth
    description: Authentication and Authorization
  - name: product
    description: Operations related to Product management
  - name: user
    description: Operations related to User management
  - name: business
    description: Operations related to Business management
  - name: inventory
    description: Operations related to Inventory management
  - name: productVariation
    description: Operations related to order variations
  - name: order
    description: Operations related to Orders

paths:
  /auth/token:
    post:
      tags:
        - auth
      summary: Generate access token for customers, managers, or admins
      description: Authenticates the user and generates a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "user_name"
                password:
                  type: string
                  format: password
                  example: "password"
              required:
                - username
                - password
      responses:
        "200":
          description: Token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The JWT token to be used for subsequent authenticated requests
        "401":
          description: Unauthorized, invalid credentials
        "500":
          description: Internal server error

  /payments:
    post:
      tags:
        - payment
      summary: Process a payment for an order
      description: Processes a payment for an open order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                  description: ID of the order being paid
                payments:
                  type: array
                  description: List of payments (split payments allowed)
                  items:
                    type: object
                    properties:
                      paymentType:
                        type: integer
                        enum: [Cash, Card, GiftCard]
                        description: Payment method
                      paidAt:
                        type: string
                        format: date-time
                        description: Amount paid
              required:
                - orderId
                - payments
      responses:
        "200":
          description: Payment processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentId:
                    type: string
        "400":
          description: Invalid payment details or order status not open
        "500":
          description: Internal server error

    get:
      tags:
        - payment
      summary: Retrieve a list of payments
      description: Fetches a list of payments. **Access restricted to users with admin or manager roles**.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: paymentType
          in: query
          description: Filter payments based on their type
          required: false
          schema:
            type: integer
        - name: startPaidAt
          in: query
          description: Filter payments made on or after this starting date and time
          required: false
          schema:
            type: string
            format: date
        - name: endPaidAt
          in: query
          description: Filter payments made on or before this ending date and time
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: A list of payments retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique ID of the payment
                    paymentTypeEnum:
                      type: integer
                      description: Enum value from PaymentType
                    paidAt:
                      type: string
                      format: date
                      description: Date and time the payment was made on
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin and Manager)
        "405":
          description: Method not supported
        "500":
          description: Internal server error

  /payments/{paymentId}:
    get:
      tags:
        - payment
      summary: Retrieve a single payment by ID
      description: Fetches a payment's details based on the provided payment ID. **Access restricted to users with admin or manager roles**.
      parameters:
        - name: paymentId
          in: path   # <--- This was missing
          required: true
          description: Unique identifier of the payment
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Payment details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID of the payment
                  paymentTypeEnum:
                    type: integer
                    description: Enum value from PaymentType
                  paidAt:
                    type: string
                    format: date
                    description: Date and time the payment was made on
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin and Manager)
        "405":
          description: Method not supported
        "500":
          description: Internal server error

    put:
      tags:
        - payment
      summary: Refund a payment
      description: Processes a refund for a specified payment by removing the payment record and puts old data into PaymentAudit table with DB triggers. **Only admin users** are allowed to refund payments.
      parameters:
        - name: paymentId
          in: path
          required: true
          description: Unique identifier of the payment
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Payment refunded successfully
        "400":
          description: Invalid paymentId
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Original payment not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

  /discount:
    post:
      tags:
        - discount
      summary: Create a new discount
      description: Adds a new discount to the system. **Access restricted to admin users only**.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                percentage:
                  type: number
                  format: double
                  description: Discount percentage (must be between 0 and 100)
                fixed:
                  type: number
                  format: double
                  description: Fixed discount amount (must be greater than or equal to 0)
                validFrom:
                  type: string
                  format: date-time
                  description: The date and time when the discount becomes valid
                validTo:
                  type: string
                  format: date-time
                  description: The date and time when the discount expires
                createdBy:
                  type: string
                  description: The ID of the person who created the discount
      responses:
        "201":
          description: Discount created successfully
        "400":
          description: Invalid request data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin)
        "500":
          description: Internal server error

  /discounts:
    get:
      tags:
        - discount
      summary: Retrieve a list of discounts
      description: Fetches a list of discounts. **Access restricted to users with admin or manager roles**.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: validFrom
          in: query
          description: Filter discounts valid from this date and time
          required: false
          schema:
            type: string
            format: date-time
        - name: validTo
          in: query
          description: Filter discounts valid up to this date and time
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: A list of discounts retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    discountId:
                      type: string
                      description: Unique ID of the discount
                    percentage:
                      type: number
                      format: double
                      description: Discount percentage
                    fixed:
                      type: number
                      format: double
                      description: Fixed discount amount
                    validFrom:
                      type: string
                      format: date-time
                      description: The date and time when the discount becomes valid
                    validTo:
                      type: string
                      format: date-time
                      description: The date and time when the discount expires
                    createdAt:
                      type: string
                      format: date-time
                      description: The date and time when the discount was created
                    modifiedAt:
                      type: string
                      format: date-time
                      description: The date and time when the discount was last modified
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin and Manager)
        "405":
          description: Method not supported
        "500":
          description: Internal server error

  /discounts/{discountId}:
    get:
      tags:
        - discount
      summary: Retrieve a single discount by ID
      description: Fetches a discount's details based on the provided discount ID. **Access restricted to users with admin or manager roles**.
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Discount details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  discountId:
                    type: string
                    description: Unique ID of the discount
                  percentage:
                    type: number
                    format: double
                    description: Discount percentage
                  fixed:
                    type: number
                    format: double
                    description: Fixed discount amount
                  validFrom:
                    type: string
                    format: date-time
                    description: The date and time when the discount becomes valid
                  validTo:
                    type: string
                    format: date-time
                    description: The date and time when the discount expires
                  createdAt:
                    type: string
                    format: date-time
                    description: The date and time when the discount was created
                  modifiedAt:
                    type: string
                    format: date-time
                    description: The date and time when the discount was last modified
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin and Manager)
        "404":
          description: Discount not found
        "405":
          description: Method not supported
        "500":
          description: Internal server error

    put:
      tags:
        - discount
      summary: Update an existing discount
      description: Updates an existing discount based on the provided discount ID. **Access restricted to admin users only**.
      parameters:
        - name: discountId
          in: path
          required: true
          description: Unique identifier of the discount to be updated
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                percentage:
                  type: number
                  format: double
                  description: Discount percentage (must be between 0 and 100)
                fixed:
                  type: number
                  format: double
                  description: Fixed discount amount (must be greater than or equal to 0)
                validFrom:
                  type: string
                  format: date-time
                  description: The date and time when the discount becomes valid
                validTo:
                  type: string
                  format: date-time
                  description: The date and time when the discount expires
                modifiedBy:
                  type: string
                  description: The user who modified the discount
      responses:
        "200":
          description: Discount updated successfully
        "400":
          description: Invalid request data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin)
        "404":
          description: Discount not found
        "500":
          description: Internal server error

    delete:
      tags:
        - discount
      summary: Delete a discount
      description: Deletes a specified discount from the system. **Access restricted to admin users only**.
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount to be deleted
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Discount deleted successfully
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin)
        "404":
          description: Discount not found
        "500":
          description: Internal server error


  /reservations:
    post:
      tags:
        - reservation
      summary: Create a new reservation
      description: Creates a new reservation. **Access restricted to admin users only**.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reservationId:
                  type: string
                  format: uuid
                restaurantId:
                  type: string
                  format: uuid
                name:
                  type: string
                reservationState:
                  type: integer
                  example: 0
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
                createdBy:
                  type: string
                  format: uuid
      responses:
        "201":
          description: Reservation created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "500":
          description: Internal server error

    get:
      tags:
        - reservation
      summary: Retrieve a list of reservations
      description: Fetches a list of reservations. **Access restricted to users with appropriate roles**.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: reservationState
          in: query
          description: Filter reservations by their state.
          required: false
          schema:
            type: integer
            enum:
              - active
              - canceled
        - name: startDate
          in: query
          description: Filter reservations created on or after this date.
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Filter reservations created on or before this date.
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: A list of reservations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reservationId:
                      type: string
                      format: uuid
                    restaurantId:
                      type: string
                      format: uuid
                    name: 
                      type: string
                    reservationState:
                      type: integer
                      enum:
                        - active
                        - canceled
                      example: "confirmed"
                    startDate:
                      type: string
                      format: date-time
                    endDate:
                      type: string
                      format: date-time
                    createdAt:
                      type: string
                      format: date-time
                    createdBy:
                      type: string
                      format: uuid
                      description: The employee who created the reservation
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "500":
          description: Internal server error

  /reservations/{reservationId}:
    get:
      tags:
        - reservation
      summary: Retrieve a single reservation by ID
      description: Fetches a reservation’s details based on the provided reservation ID. **Access restricted to users with appropriate roles**.
      parameters:
        - name: reservationId
          in: path
          description: Unique identifier of the reservation
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Reservation details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservationId:
                    type: string
                    format: uuid
                  restaurantId:
                    type: string
                    format: uuid
                  name: 
                    type: string
                  reservationState:
                    type: integer
                    enum:
                      - active
                      - canceled
                    example: "confirmed"
                  startDate:
                    type: string
                    format: date-time
                  endDate:
                    type: string
                    format: date-time
                  createdAt:
                    type: string
                    format: date-time
                  createdBy:
                    type: string
                    format: uuid
                    description: The employee who created the reservation
        "400":
          description: Invalid reservation ID
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Reservation not found
        "500":
          description: Internal server error

    put:
      tags:
        - reservation
      summary: Update a reservation
      description: Updates a reservation's details. **Access restricted to admin users only**.
      parameters:
        - name: reservationId
          in: path
          description: Unique identifier of the reservation
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reservationId:
                  type: string
                restaurantId:
                  type: string
                  format: uuid
                name: 
                  type: string
                reservationState:
                  type: integer
                  example: 0
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
                modifiedAt:
                  type: string
                  format: date-time
                modifiedBy:
                  type: string
                  format: uuid
                  description: The employee who modified the reservation
      responses:
        "200":
          description: Reservation updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Reservation not found
        "500":
          description: Internal server error

    delete:
      tags:
        - reservation
      summary: Delete a reservation
      description: Deletes a reservation based on the provided reservation ID. **Only admin users can delete reservations**.
      parameters:
        - name: reservationId
          in: path
          description: Unique identifier of the reservation
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Reservation deleted successfully
        "400":
          description: Invalid reservation ID
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Reservation not found
        "500":
          description: Internal server error

  /reservations/cancel/{reservationId}:
    post:
      tags:
        - reservation
      summary: Cancels a reservation
      description: Cancels a reservation based on the provided reservation ID.
      parameters:
        - name: reservationId
          in: path
          description: Unique identifier of the reservation
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Reservation cancelled successfully
        "400":
          description: Invalid reservation ID
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Reservation not found
        "500":
          description: Internal server error

  /employees:
    post:
      tags:
        - employee
      summary: Create a new employee
      description: Creates a new employee and puts data into EmployeeAudit table with DB triggers. **Access restricted to users with admin or manager roles**.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: First name of the employee
                surname:
                  type: string
                  description: Last name of the employee
                userTypeEnum:
                  type: integer
                  description: User type enum from UserTypeEnum
                business_id:
                  type: string
                  format: uuid
                  description: ID of the business the employee belongs to
              required:
                - name
                - surname
                - userTypeEnum
                - business_id
      responses:
        "201":
          description: Employee created successfully
        "400":
          description: Invalid employee data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin and Manager)
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

    get:
      tags:
        - employee
      summary: Retrieve a list of employees that currently working
      description: Fetches a list of employees. **Access restricted to users with admin or manager roles**.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: name
          in: query
          description: Filter employees by their first name
          required: false
          schema:
            type: string
        - name: surname
          in: query
          description: Filter employees by their last name
          required: false
          schema:
            type: string
        - name: userTypeEnum
          in: query
          description: Filter employees by their user type enum
          required: false
          schema:
            type: integer
        - name: businessId
          in: query
          description: Filter employees by business ID
          required: false
          schema:
            type: string
            format: uuid
        - name: userType
          in: query
          description: User type enum value
          required: false
          schema:
            type: integer
        - name: workingFromFrom
          in: query
          description: Filter out by date (working from (from date))
          required: false
          schema:
            type: string
            format: date
        - name: workingFromTo
          in: query
          description: Filter out by date (working from (to date))
          required: false
          schema:
            type: string
            format: date
        - name: email
          in: query
          description: Filter out by email
          required: false
          schema:
            type: string
            format: email
      responses:
        "200":
          description: A list of employees retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique ID of the employee
                    name:
                      type: string
                      description: First name of the employee
                    surname:
                      type: string
                      description: Last name of the employee
                    userTypeEnum:
                      type: integer
                      description: User type enum from UserTypeEnum
                    business_id:
                      type: string
                      format: uuid
                      description: ID of the business the employee belongs to
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin and Manager)
        "405":
          description: Method not supported
        "500":
          description: Internal server error

  /employees/{employeeId}:
    get:
      tags:
        - employee
      summary: Retrieve a single employee by ID
      description: Fetches an employee's details based on the provided employee ID. **Access restricted to users with admin or manager roles**.
      parameters:
        - name: employeeId
          in: path
          required: true
          description: Unique identifier of the employee
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Employee details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID of the employee
                  name:
                    type: string
                    description: First name of the employee
                  surname:
                    type: string
                    description: Last name of the employee
                  userTypeEnum:
                    type: integer
                    description: User type enum from UserTypeEnum
                  createdAt:
                    type: string
                    format: date-time
                    description: Created at date and time
                  userName:
                    type: string
                    description: Employee's user name
                  userId:
                    type: string
                    format: uuid
                    description: Employee's user Id for navigation
                  business_id:
                    type: string
                    format: uuid
                    description: ID of the business the employee belongs to
        "400":
          description: Invalid request
        "404":
          description: Employee not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin and Manager)
        "405":
          description: Method not supported
        "500":
          description: Internal server error

    put:
      tags:
        - employee
      summary: Update existing employee
      description: Updates existing employee and puts old data into EmployeeAudit table with DB triggers. **Access restricted to users with admin or manager roles**. **Only admin users** can add the `business_id`.
      parameters:
        - name: employeeId
          in: path
          required: true
          description: Unique identifier of the employee
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: First name of the employee
                surname:
                  type: string
                  description: Last name of the employee
                userTypeEnum:
                  type: integer
                  description: User type enum from UserTypeEnum
                business_id:
                  type: string
                  format: uuid
                  description: ID of the business the employee belongs to
              anyOf: # At least one field from the list must be present
                - required:
                    - name
                - required:
                    - surname
                - required:
                    - userTypeEnum
                - required:
                    - business_id
      responses:
        "200":
          description: Employee edited successfully
        "400":
          description: Invalid employee data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin and Manager)
        "404":
          description: Original employee not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

    delete:
      tags:
        - employee
      summary: Delete employee from working DB table
      description: Deletes employee data from working table and puts old data into EmployeeAudit table with DB triggers. **Access restricted to users with admin or manager roles**.
      parameters:
        - name: employeeId
          in: path
          required: true
          description: Unique identifier of the employee
          schema:
            type: string
      responses:
        "204":
          description: Employee removed successfully
        "400":
          description: Invalid request
        "404":
          description: Employee not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin and Manager)
        "405":
          description: Method not supported
        "500":
          description: Internal server error

  /giftCard:
    post:
      tags:
        - giftCard
      summary: Create a new gift card
      description: Creates a new gift card and puts data into GiftCardAudit table with DB triggers.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: number
                  format: double
                  description: Price of the gift card
                validTo:
                  type: string
                  format: date
                  description: Gift card valid to date
                business_id:
                  type: string
                  format: uuid
                  description: ID of the business the employee belongs to
              required:
                - number
                - business_id
      responses:
        "201":
          description: Gift card created successfully
        "400":
          description: Invalid gift card data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

    get:
      tags:
        - giftCard
      summary: Retrieve a list of gift cards
      description: Fetches a list of gift cards.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: name
          in: query
          description: Filter gift cards by their price
          required: false
          schema:
            type: number
            format: double
        - name: code
          in: query
          description: Filter gift cards by their code
          required: false
          schema:
            type: string
        - name: validTo
          in: query
          description: Filter gift cards by their valid to date
          required: false
          schema:
            type: string
            format: date
        - name: businessId
          in: query
          description: Filter gift cards by business ID
          required: false
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A list of gift cards retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Unique ID of the gift card
                    price:
                      type: number
                      format: double
                      description: Price of the gift card
                    code:
                      type: string
                      description: Code of the gift card
                    validTo:
                      type: string
                      format: date
                      description: Valid to date
                    business_id:
                      type: string
                      format: uuid
                      description: ID of the business the gift card belongs to
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error

  /giftCard/{giftCardId}:
    get:
      tags:
        - giftCard
      summary: Retrieve a single giftCard by ID
      description: Fetches an gift card's details based on the provided gift card ID.
      parameters:
        - name: giftCardId
          in: path
          required: true
          description: Unique identifier of the gift card
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Gift card details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique ID of the gift card
                  price:
                    type: number
                    format: double
                    description: Price of the gift card
                  code:
                    type: string
                    description: Code of the gift card
                  validTo:
                    type: string
                    format: date
                    description: Valid to date
                  createdAt:
                    type: string
                    format: date-time
                    description: Created at date and time
                  createdByName:
                    type: string
                    description: Employee's name who created gift card
                  createdById:
                    type: string
                    format: uuid
                    description: Employee's id who created gift card
                  business_id:
                    type: string
                    format: uuid
                    description: ID of the business the gift card belongs to
        "400":
          description: Invalid request
        "404":
          description: Gift card not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error

    put:
      tags:
        - giftCard
      summary: Update existing gift card
      description: Updates existing gift card and puts old data into GiftCardAudit table with DB triggers. **Only admin users** can add the `business_id`.
      parameters:
        - name: giftCardId
          in: path
          required: true
          description: Unique identifier of the gift card
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: number
                  format: double
                  description: Price of the gift card
                code:
                  type: string
                  description: Code of the gift card
                validTo:
                  type: string
                  format: date
                  description: Valid to date
                business_id:
                  type: string
                  format: uuid
                  description: ID of the business the gift card belongs to
              anyOf: # Requires at least one field from the following
                - required:
                    - price
                - required:
                    - code
                - required:
                    - validTo
                - required:
                    - business_id
      responses:
        "200":
          description: Gift card edited successfully
        "400":
          description: Invalid gift card data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Original gift card not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

    delete:
      tags:
        - giftCard
      summary: Delete gift card from working DB table
      description: Deletes gift card data from working table and puts old data into GiftCardAudit table with DB triggers. **Access restricted to users with Manager or Admin role**.
      parameters:
        - name: giftCardId
          in: path
          required: true
          description: Unique identifier of the gift card
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Gift card removed successfully
        "400":
          description: Invalid request
        "404":
          description: Gift card not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only Admin and Manager)
        "405":
          description: Method not supported
        "500":
          description: Internal server error

  /restaurant:
    post:
      tags:
        - restaurant
      summary: Create new restaurant
      description: Creates a new restaurant entity and puts data into RestaurantAudit table with DB triggers. **Access restricted to users with admin or manager roles**.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Restaurant name
                country:
                  type: string
                  description: Country name
                city:
                  type: string
                  description: City name
                street:
                  type: string
                  description: Street name
                number:
                  type: string
                  description: House number
                postCode:
                  type: string
                  description: Post code
                business_id:
                  type: string
                  format: uuid
                  description: ID of the business the employee belongs to
              required:
                - name
                - country
                - city
                - street
                - number
                - postCode
                - business_id
      responses:
        "201":
          description: Restaurant card created successfully
        "400":
          description: Invalid restaurant data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin or manager)
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

    get:
      tags:
        - restaurant
      summary: Retrieve a list of business's restaurants
      description: Fetches a list of restaurants. **Only admin users** can add the `business_id`.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: name
          in: query
          description: Filter restaurant by their name
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: Filter restaurants by their code
          required: false
          schema:
            type: integer
        - name: country
          in: query
          description: Filter restaurants by their country
          required: false
          schema:
            type: string
        - name: city
          in: query
          description: Filter restaurants by city
          required: false
          schema:
            type: string
        - name: street
          in: query
          description: Filter restaurants by street
          required: false
          schema:
            type: string
        - name: number
          in: query
          description: Filter restaurants by number
          required: false
          schema:
            type: string
        - name: postCode
          in: query
          description: Filter restaurants by postCode
          required: false
          schema:
            type: string
        - name: businessId
          in: query
          description: Filter restaurants by business **(only admin)**
          required: false
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A list of restaurants retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Unique ID of the restaurant
                    name:
                      type: string
                      description: Name of the restaurant
                    code:
                      type: string
                      description: Code of the restaurant
                    fullAddress:
                      type: string
                      description: Full address of the restaurant
                    business_id:
                      type: string
                      format: uuid
                      description: ID of the business the restaurant belongs to
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error

  /restaurant/{restaurantId}:
    get:
      tags:
        - restaurant
      summary: Retrieve a single restaurant by ID
      description: Fetches an restaurant's details based on the provided restaurant ID.
      parameters:
        - name: restaurantId
          in: path
          required: true
          description: Unique identifier of the restaurant
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Restaurant details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique ID of the restaurant
                  code:
                    type: string
                    description: Code of the restaurant
                  name:
                    type: string
                    description: Name of the restaurant
                  country:
                    type: string
                    description: Country of the restaurant
                  city:
                    type: string
                    description: City of the restaurant
                  street:
                    type: string
                    description: Street of the restaurant
                  number:
                    type: string
                    description: Number of the restaurant
                  postCode:
                    type: string
                    description: Post code of the restaurant
                  addressId:
                    type: string
                    format: uuid
                    description: Address table's id
                  createdAt:
                    type: string
                    format: date-time
                    description: Created at date and time
                  createdByName:
                    type: string
                    description: Employee's name who created restaurant
                  createdById:
                    type: string
                    format: uuid
                    description: Employee's id who created restaurant
                  business_id:
                    type: string
                    format: uuid
                    description: ID of the business the restaurant belongs to
        "400":
          description: Invalid request
        "404":
          description: Restaurant not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error

    put:
      tags:
        - restaurant
      summary: Update existing restaurant
      description: Updates existing restaurant and puts old data into RestaurantAudit table with DB triggers. **Only admin users** can add the `business_id`.
      parameters:
        - name: restaurantId
          in: path
          required: true
          description: Unique identifier of the restaurant
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: New name of the restaurant
                country:
                  type: string
                  description: Country of the restaurant
                city:
                  type: string
                  description: City of the restaurant
                street:
                  type: string
                  description: Street of the restaurant
                number:
                  type: string
                  description: Number of the restaurant
                postCode:
                  type: string
                  description: Post code of the restaurant
                addressId:
                  type: string
                  format: uuid
                  description: ID of the address' table
                business_id:
                  type: string
                  format: uuid
                  description: ID of the business the restaurant belongs to
              anyOf: # Requires at least one field from the following
                - required:
                    - name
                - required:
                    - country
                - required:
                    - city
                - required:
                    - street
                - required:
                    - number
                - required:
                    - postCode
                - required:
                    - business_id
      responses:
        "200":
          description: Restaurant edited successfully
        "400":
          description: Invalid restaurant data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Original restaurant not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

    delete:
      tags:
        - restaurant
      summary: Delete restaurant from working DB table
      description: Deletes gift card data from working table and puts old data into RestaurantAudit table with DB triggers. **Access restricted to users with Admin role**.
      parameters:
        - name: restaurantId
          in: path
          required: true
          description: Unique identifier of the restaurant
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Restaurant removed successfully
        "400":
          description: Invalid request
        "404":
          description: Restaurant not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only Admin)
        "405":
          description: Method not supported
        "500":
          description: Internal server error
  /product:
    post:
      tags:
        - product
      summary: Create new product
      description: Creates a new product entity and puts data into ProductAudit table with DB triggers. **Access restricted to users with admin or manager roles**.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Product name
                tax:
                  type: integer
                  description: Percentage of tax applied to product
                price:
                  type: number
                  format: double
                  description: Product price without tax
                createdBy:
                  type: string
                  format: uuid
                  description: ID of the employee who created the product
                businessId:
                  type: string
                  format: uuid
                  description: ID of the business to which the product belongs
              required:
                - name
                - tax
                - price
                - createdBy
                - business_id
      responses:
        "201":
          description: Product created successfully
        "400":
          description: Invalid product data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin or manager)
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error
    get:
      tags:
        - product
      summary: Retrieve a list of products
      description: Fetches a list of products.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: name
          in: query
          description: Filter products by their name
          required: false
          schema:
            type: string
        - name: tax
          in: query
          description: Filter products by their tax
          required: false
          schema:
            type: integer
        - name: price
          in: query
          description: Filter products by their price
          required: false
          schema:
            type: number
            format: double
        - name: createdAt
          in: query
          description: Filter products by date they were created
          required: false
          schema:
            type: string
            format: date-time
        - name: modifiedAt
          in: query
          description: Filter products by date they were modified
          required: false
          schema:
            type: string
            format: date-time
        - name: modifiedBy
          in: query
          description: Filter products by user who last modified them
          required: false
          schema:
            type: string
            format: uuid
        - name: createdBy
          in: query
          description: Filter products by user who created them
          required: false
          schema:
            type: string
            format: uuid
        - name: businessId
          in: query
          description: Filter products by business
          required: false
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A list of products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Product name
                    tax:
                      type: integer
                      description: Percentage of tax applied to product
                    price:
                      type: number
                      format: double
                      description: Product price without tax
                    createdAt:
                      type: string
                      format: date-time
                      description: Date when product was first created
                    modifiedAt:
                      type: string
                      format: date-time
                      description: Date when product was last modified
                    modifiedBy:
                      type: string
                      format: uuid
                      description: ID of the employee who last modified the product
                    createdBy:
                      type: string
                      format: uuid
                      description: ID of the employee who created the product
                    businessId:
                      type: string
                      format: uuid
                      description: ID of the business to which the product belongs
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error
      
  /product/{productId}:
    get:
      tags:
        - product
      summary: Retrieve a single product by ID
      description: Fetches a product's details based on the provided product ID.
      parameters:
        - name: productId
          in: path
          required: true
          description: Unique identifier of the product
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Product details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Product name
                  tax:
                    type: integer
                    description: Percentage of tax applied to product
                  price:
                    type: number
                    format: double
                    description: Product price without tax
                  createdAt:
                    type: string
                    format: date-time
                    description: Date when product was first created
                  modifiedAt:
                    type: string
                    format: date-time
                    description: Date when product was last modified
                  modifiedBy:
                    type: string
                    format: uuid
                    description: ID of the employee who last modified the product
                  createdBy:
                    type: string
                    format: uuid
                    description: ID of the employee who created the product
                  businessId:
                    type: string
                    format: uuid
                    description: ID of the business to which the product belongs
        "400":
          description: Invalid request
        "404":
          description: Product not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error
    put:
      tags:
        - product
      summary: Update existing product
      description: Updates existing product and puts old data into ProductAudit table with DB triggers. **Only admin users** can add the `business_id`.
      parameters:
        - name: productId
          in: path
          required: true
          description: Unique identifier of the product
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Product name
                tax:
                  type: integer
                  description: Percentage of tax applied to product
                price:
                  type: number
                  format: double
                  description: Product price without tax
                businessId:
                  type: string
                  format: uuid
                  description: ID of the business to which the product belongs
              anyOf:
                - required:
                  - name
                - required:
                  - tax
                - required:
                  - price
                - required:
                  - businessId
      responses:
        "200":
          description: Product edited successfully
        "400":
          description: Invalid product data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Original product not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error
    delete:
      tags:
        - product
      summary: Delete product from working DB table
      description: Deletes product data from working table and puts old data into ProductAudit table with DB triggers. **Access restricted to users with Admin role**.
      parameters:
        - name: productId
          in: path
          required: true
          description: Unique identifier of the product
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Product removed successfully
        "400":
          description: Invalid request
        "404":
          description: Product not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only Admin)
        "405":
          description: Method not supported
        "500":
          description: Internal server error
  /user:
    post:
      tags:
        - user
      summary: Create new user
      description: Creates a new user entity and puts data into UserAudit table with DB triggers. **Access restricted to users with Admin role**.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username
                passwordHash:
                  type: string
                  description: Hashed user password
                email:
                  type: string
                  description: User email address
              required:
                - username
                - passwordHash
                - email
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid user data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only admin or manager)
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error
    get:
      tags:
        - user
      summary: Retrieve a list of users
      description: Fetches a list of users. **Access restricted to users with Admin role**.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: username
          in: query
          description: Filter users by username
          required: false
          schema:
            type: string
        - name: passwordHash
          in: query
          description: Filter users by password hash
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: Filter users by their email
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          description: Filter users by date they were created
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: A list of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                      description: Username
                    passwordHash:
                      type: string
                      description: Hashed user password
                    email:
                      type: string
                      description: User email address
                    createdAt:
                      type: string
                      format: date-time
                      description: Date when user was created
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error

  /user/{userId}:
    get:
      tags:
        - user
      summary: Retrieve a single user by ID
      description: Fetches a user's details based on the provided user ID.  **Access restricted to users with Admin role**.
      parameters:
        - name: userId
          in: path
          required: true
          description: Unique identifier of the user
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Username
                  passwordHash:
                    type: string
                    description: Hashed user password
                  email:
                    type: string
                    description: User's email address
                  createdAt:
                    type: string
                    format: date-time
                    description: Date when user was created
        "400":
          description: Invalid request
        "404":
          description: User not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error
    put:
      tags:
        - user
      summary: Update existing user
      description: Updates existing user and puts old data into UserAudit table with DB triggers.
      parameters:
        - name: userId
          in: path
          required: true
          description: Unique identifier of the user
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username
                passwordHash:
                  type: string
                  description: Hashed user password
                email:
                  type: string
                  description: User email address
              anyOf:
                - required:
                  - username
                - required:
                  - passwordHash
                - required:
                  - email
      responses:
        "200":
          description: User edited successfully
        "400":
          description: Invalid user data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Original user not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error
    delete:
      tags:
        - user
      summary: Delete user from working DB table
      description: Deletes user data from working table and puts old data into UserAudit table with DB triggers. **Access restricted to users with Admin role**.
      parameters:
        - name: userId
          in: path
          required: true
          description: Unique identifier of the user
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: User removed successfully
        "400":
          description: Invalid request
        "404":
          description: User not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only Admin)
        "405":
          description: Method not supported
        "500":
          description: Internal server error
  

  /orders:
    post:
      tags:
        - order
      summary: Create a new order
      description: Creates a new order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderItems:
                  type: array
                  description: List of items in the order
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        description: ID of the product
                      quantity:
                        type: integer
                        description: Quantity of the product
                discountId:
                  type: string
                  description: Optional discount applied to the order
                tip:
                  type: number
                  format: double
                  description: Optional tip added by the customer
              required:
              - orderItems
      responses:
        "201":
          description: Order created successfully
        "400":
          description: Invalid input data
        "500":
          description: Internal server error
    get:
      tags:
        - order
      summary: Retrieve a list of orders
      description: Fetches a list of orders.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: price
          in: query
          description: Filter orders by their price
          required: false
          schema:
            type: number
            format: double
        - name: createdAt
          in: query
          description: Filter orders by their creation date
          required: false
          schema:
            type: string
            format: date
        - name: modifiedAt
          in: query
          description: Filter orders by their modification date
          required: false
          schema:
            type: string
            format: date
        - name: modifiedBy
          in: query
          description: Filter orders by the ID of the employee who modified the orders
          required: false
          schema:
            type: string
            format: uuid
        - name: createdBy
          in: query
          description: Filter orders by the ID of the order creator
          required: false
          schema:
            type: string
            format: uuid
        - name: businessId
          in: query
          description: Filter orders by business ID
          required: false
          schema:
            type: string
            format: uuid
        - name: orderStatus
          in: query
          description: Filter orders by their order status enum value
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: A list of orders retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  properties:
                    id: 
                      type: string
                      format: uuid
                      description: Unique ID of the order
                    price:
                      type: number
                      format: double
                      description: Price of the order
                    OrderStatusEnum:
                      type: integer
                      enum: [Open, Closed, Cancelled, Refunded]
                      description: Order type enum from OrderStatusEnum
                    createdAt:
                      type: string
                      format: date
                      description: Order creation date
                    modifiedAt:
                      type: string
                      format: date
                      description: Order modification date
                    modifiedBy:
                      type: string
                      format: uuid
                      description: ID of the employee who modified the order
                    createdBy:
                      type: string
                      format: uuid
                      description: ID of the employee who created the order
                    businessId:
                        type: string
                        format: uuid
                    orderItems:
                      type: array
                      description: List of items in the order
                      items:
                        type: object
                        properties:
                          productId:
                            type: string
                            description: Product ID
                          quantity:
                            type: integer
                            description: Quantity of the product  
                    discountId:
                      type: string
                      format: uuid
                      description: Optional discount applied to the order
                    tip:
                      type: number
                      format: double
                      description: Optional tip added by the customer
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "500":
          description: Internal server error

  /orders/{orderId}:
    get:
      tags:
        - order
      summary: Retrieve a single order
      description: Fetches an order based on the provided order ID.
      parameters:
        - name: orderId
          in: path
          required: true
          description: Unique identifier of the order
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The order retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: string
                    format: uuid
                    description: Unique ID of the order
                  price:
                    type: number
                    format: double
                    description: Price of the order
                  createdAt:
                    type: string
                    format: date
                    description: Order creation date
                  modifiedAt:
                    type: string
                    format: date
                    description: Order modification date
                  modifiedBy:
                    type: string
                    format: uuid
                    description: ID of the employee who modified the order
                  createdBy:
                    type: string
                    format: uuid
                    description: ID of the employee who created the order
                  businessId:
                    type: string
                    format: uuid
                  OrderStatusEnum:
                    type: integer
                    enum: [Open, Closed, Cancelled, Refunded]
                    description: Order type enum from OrderStatusEnum
                  orderItems:
                    type: array
                    description: List of items in the order
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                          format: uuid
                          description: Product ID
                        quantity:
                          type: integer
                          description: Quantity of the product
        "400":
          description: Invalid request
        "404":
          description: Order not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error
  
    put:
      tags:
        - order
      summary: Modify an open order
      description: Modifies the details of an open order.
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: ID of the order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderItems:
                  type: array
                  description: List of items in the order
                  items:
                    type: object
                    properties:
                      ProductId:
                        type: string
                        description: ID of the product
                      quantity:
                        type: integer
                        description: Quantity of the product
                discountId:
                  type: string
                  format: uuid
                  description: Optional discount applied to the order
                tip:
                  type: number
                  format: double
                  description: Optional tip added by the customer
              anyOf:
                - required:
                  - orderItems
                - required:
                  - discountId
                - required:
                  - tip
      responses:
        "200":
          description: Order updated successfully
        "400":
          description: Invalid input or order status not open
        "404":
          description: Order not found
        "500":
          description: Internal server error

    delete:
      tags:
        - order
      summary: Delete an order
      description: Deletes order with the specified ID. Open orders cannot be deleted. **This action is restricted to admin users**.
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            description: The ID of the order
      responses:
        "200":
          description: Order deleted successfully
        "400":
          description: Order is status is open
        "404":
          description: Order not found
        "500":
          description: Internal server error

  /orders/close/{orderId}:   
    put:
      tags:
        - order
      summary: Close an order 
      description: Closes an order based on the order ID and and puts data into OrderAudit table with DB triggers. Closed orders cannot be modified, but refunds can be processed.
      parameters:
        - name: orderId
          in: path
          required: true
          description: Unique identifier of the order
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Order closed successfully
        "400":
          description: Invalid orderId
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Order not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

  /orders/cancel/{orderId}:
    put:
      tags:
        - order
      summary: Cancel an order 
      description: Cancels an open order based on the provided order ID.
      parameters:
        - name: orderId
          in: path
          required: true
          description: Unique identifier of the order
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Order cancelled successfully
        "400":
          description: Invalid orderId
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Order not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

  /orders/refund/{orderId}:
    put:
      tags:
        - order
      summary: Refund an order 
      description: Refunds the specified order and puts order data into OrderAudit table with DB triggers. Only closed orders can be refunded. **Action is restricted to admin users**
      parameters:
        - name: orderId
          in: path
          required: true
          description: Unique identifier of the order
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Order refunded successfully
        "400":
          description: Invalid orderId
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Order not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

  /productVariation:
    post:
      tags:
        - productVariation
      summary: Create a new product variation
      description: Creates a new product variation and puts data into productVariationAudit table with DB triggers. **Access restricted to users with admin or manager roles.**
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  format: uuid
                name:
                  type: string
                additionalPrice:
                  type: number
                  format: double
                  description: Price of the product variation
              required:
              - productId
              - name
              - additionalPrice           
      responses:
        "201":
          description: Product variation created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (only admin or manager)
        "500":
          description: Internal server error

    get:
      tags:
        - productVariation
      summary: Retrieve a list of product variations
      description: Fetches a list of product variations.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
           type: integer
        - name: additionalPrice
          in: query
          description: Filter product variations by their price
          required: false
          schema:
            type: number
            format: double
        - name: createdAt
          in: query
          description: Filter product variations by their creation date
          required: false
          schema:
            type: string
            format: date
        - name: modifiedAt
          in: query
          description: Filter product variations by their modification date
          required: false
          schema:
            type: string
            format: date
        - name: modifiedBy
          in: query
          description:  Filter product variations by the ID of the product variation
          required: false
          schema:
            type: string
            format: uuid
        - name: createdBy
          in: query
          description: Filter product variations by the ID of the product variation creator
          required: false
          schema:
            type: string
            format: uuid
        - name: productId
          in: query
          description: Filter product variations by product ID
          required: false
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A list of order variations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  properties:
                    id: 
                      type: string
                      format: uuid
                      description: Unique ID of the product variation
                    name:
                      type: string
                      description: Name of the product variation                  
                    additionalPrice:
                      type: number
                      format: double
                      description: Price of the product variation            
                    createdAt:
                      type: string
                      format: date
                      description: Product variation creation date
                    modifiedAt:
                      type: string
                      format: date
                      description: product variation modification date
                    modifiedBy:
                      type: string
                      format: uuid
                      description: ID of the employee who modified the product variation
                    createdBy:
                      type: string
                      format: uuid
                      description: ID of the employee who created the product variation
                    productId: 
                      type: string
                      format: uuid
                      description: Unique ID of the product variation
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission 
        "500":
          description: Internal server error
    
  /productVariation/{productVariationId}:
    get:
      tags:
        - productVariation
      summary: Retrieve a single product variation
      description: Fetches product variation on the provided product variation ID.
      parameters:
        - name: productVariationId
          in: path
          required: true
          description: ID of the product variation
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Product variation retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                    id: 
                      type: string
                      format: uuid
                      description: ID of the product variation
                    name:
                      type: string
                      description: Name of the product variation     
                    additionalPrice:
                      type: number
                      format: double
                      description: Price of the product variation
                    createdAt:
                      type: string
                      format: date
                      description: Product variation creation date 
                    modifiedAt:
                      type: string
                      format: date
                      description: Product variation modification date
                    modifiedBy:
                      type: string
                      format: uuid
                      description: ID of the employee who modified the product variation
                    createdBy:
                      type: string
                      format: uuid
                      description: ID of the employee who created the product variation                
                    productId: 
                      type: string
                      format: uuid
                      description: ID of the product variation               
        "400":
          description: Invalid request
        "404":
          description: Product variation not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error
   
    put:
      tags:
        - productVariation
      summary: Modify product variation
      description: Updates existing product variation and puts old data into ProductVariationAudit table with DB triggers. **Access restricted to users with admin or manager roles**.
      parameters:
        - name: productVariationId
          in: path
          required: true
          description: ID of the product variation
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the product variation        
                additionalPrice:
                  type: number
                  format: double
                  description: Price of the product variation
              anyOf:
                - required:
                    - name
                - required:
                    - additionalPrice 
      responses:
        "200":
          description: Product variation modified successfully
        "400":
          description: Invalid product variation data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (only admin or manager)
        "404":
          description: Product variation not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error
   
    delete:
      tags:
        - productVariation
      summary: Delete product variation.
      description: Deletes product variation data from working table and puts old data into ProductVariationAudit table with DB triggers. **Access restricted to users with admin or manager roles**.
      parameters:
        - name: productVariationId
          in: path
          required: true
          description: ID of the product variation
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Product variation removed successfully
        "400":
          description: Invalid request
        "404":
          description: Product variation not found
        "401":  
          description: Unauthenticated user
        "403":
          description: No permission (only admin or manager)
        "405":
          description: Method not supported
        "500":
          description: Internal server error

  /business:
    post:
      tags:
        - business
      summary: Create a new business
      description: Creates a new business.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessCode:
                  type: string
                  description: Business code
                name:
                  type: string
                  description: Business name
                phone:
                  type: string
                  description: Business phone number
                email:
                  type: string
                  format: email
                  description: Business email
              required:
                - businessCode
                - name
                - phone
                - email
      responses:
        "201":
          description: Business created successfully
        "400":
          description: Invalid business data
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error
    get:
      tags:
        - business
      summary: Retrieve a list of businesses
      description: Fetches a list of businesses.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: businessCode
          in: query
          description: Filter businesses by their business code
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Filter businesses by their name
          required: false
          schema:
            type: string
        - name: phone
          in: query
          description: Filter businesses by their phone number
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: Filter businesses by their email
          required: false
          schema:
            type: string
            format: email
        - name: createdAt
          in: query
          description: Filter businesses by date they were created
          required: false
          schema:
            type: string
            format: date-time
        - name: createdBy
          in: query
          description: Filter businesses by user who created them
          required: false
          schema:
            type: string
            format: uuid
        - name: modifiedAt
          in: query
          description: Filter businesses by when they were modified
          required: false
          schema:
            type: string
            format: date-time
        - name: modifiedBy
          in: query
          description: Filter businesses by user who last modified them
          required: false
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A list of businesses retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    businessCode:
                      type: string
                      description: Business Code
                    name:
                      type: string
                      description: Name of the business
                    phone:
                      type: string
                      description: Phone number of the business
                    email:
                      type: string
                      format: email
                      description: Email of the business
                    createdAt:
                      type: string
                      format: date-time
                      description: Date when business was first created
                    createdBy:
                      type: string
                      format: uuid
                      description: ID of the employee who created the business
                    modifiedAt:
                      type: string
                      format: date-time
                      description: Date when business was last modified
                    modifiedBy:
                      type: string
                      format: uuid
                      description: ID of the employee who last modified the business
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error
          
  /business/{businessId}:
    get:
      tags:
        - business
      summary: Retrieve a single business by ID
      description: Fetches details of a business based on the provided business ID.
      parameters:
        - name: businessId
          in: path
          required: true
          description: Unique identifier of the business
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Business details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessCode:
                    type: string
                    description: Business Code
                  name:
                    type: string
                    description: Name of the business
                  phone:
                    type: string
                    description: Phone number of the business
                  email:
                    type: string
                    format: email
                    description: Email of the business
                  createdAt:
                    type: string
                    format: date-time
                    description: Date when business was first created
                  createdBy:
                    type: string
                    format: uuid
                    description: ID of the employee who created the business
                  modifiedAt:
                    type: string
                    format: date-time
                    description: Date when business was last modified
                  modifiedBy:
                    type: string
                    format: uuid
                    description: ID of the employee who last modified the business
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error
    put:
      tags:
        - business
      summary: Update existing business
      description: Updates existing business.
      parameters:
        - name: businessId
          in: path
          required: true
          description: Unique identifier of the business
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessCode:
                  type: string
                  description: Business code
                name:
                  type: string
                  description: Business name
                phone:
                  type: string
                  description: Business phone
                email:
                  type: string
                  format: email
                  description: Business email
              anyOf:
                - required:
                  - businessCode
                - required:
                  - name
                - required:
                  - phone
                - required:
                  - email
      responses:
        "200":
          description: Business edited successfully
        "400":
          description: Invalid business data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Original business not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error
    delete:
      tags:
        - business
      summary: Delete business from working DB table
      description: Deletes business data from working table.
      parameters:
        - name: businessId
          in: path
          required: true
          description: Unique identifier of the business
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Business removed successfully
        "400":
          description: Invalid request
        "404":
          description: Business not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only Admin)
        "405":
          description: Method not supported
        "500":
          description: Internal server error
          
  /inventory:
    post:
      tags:
        - inventory
      summary: Create a new inventory item
      description: Creates a new inventory record.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ProductId:
                  type: string
                  format: uuid
                  description: Unique identifier of the product
                ProductVariationId:
                  type: string
                  format: uuid
                  description: Unique identifier of the product variation
                Count:
                  type: integer
                  description: Number of items in stock
              required:
                - ProductId
                - ProductVariationId
                - Count
      responses:
        "201":
          description: Inventory item created successfully
        "400":
          description: Invalid inventory data
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error
  
    get:
      tags:
        - inventory
      summary: Retrieve a list of inventory items
      description: Fetches a list of inventory items.
      parameters:
        - name: resultCount
          in: query
          description: Maximum number of items to return
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Column to order results by
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: ProductId
          in: query
          description: Filter inventory by product ID
          required: false
          schema:
            type: string
            format: uuid
        - name: ProductVariationId
          in: query
          description: Filter inventory by product variation ID
          required: false
          schema:
            type: string
            format: uuid
        - name: Count
          in: query
          description: Filter inventory by count
          required: false
          schema:
            type: integer
        - name: createdAt
          in: query
          description: Filter inventory by creation date
          required: false
          schema:
            type: string
            format: date-time
        - name: modifiedAt
          in: query
          description: Filter inventory by modification date
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: A list of inventory items retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    InventoryId:
                      type: string
                      format: uuid
                      description: Unique identifier of the inventory item
                    ProductId:
                      type: string
                      format: uuid
                      description: Unique identifier of the product
                    ProductVariationId:
                      type: string
                      format: uuid
                      description: Unique identifier of the product variation
                    Count:
                      type: integer
                      description: Number of items in stock
                    createdAt:
                      type: string
                      format: date-time
                      description: Date when the inventory item was created
                    modifiedAt:
                      type: string
                      format: date-time
                      description: Date when the inventory item was last modified
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error
  
  /inventory/{inventoryId}:
    get:
      tags:
        - inventory
      summary: Retrieve a specific inventory item by ID
      description: Fetches details of an inventory item based on the provided inventory ID.
      parameters:
        - name: inventoryId
          in: path
          required: true
          description: Unique identifier of the inventory item
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Inventory item details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  InventoryId:
                    type: string
                    format: uuid
                    description: Unique identifier of the inventory item
                  ProductId:
                    type: string
                    format: uuid
                    description: Unique identifier of the product
                  ProductVariationId:
                    type: string
                    format: uuid
                    description: Unique identifier of the product variation
                  Count:
                    type: integer
                    description: Number of items in stock
                  createdAt:
                    type: string
                    format: date-time
                    description: Date when the inventory item was created
                  modifiedAt:
                    type: string
                    format: date-time
                    description: Date when the inventory item was last modified
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error
  
    put:
      tags:
        - inventory
      summary: Update existing inventory item
      description: Updates an existing inventory item.
      parameters:
        - name: inventoryId
          in: path
          required: true
          description: Unique identifier of the inventory item
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ProductId:
                  type: string
                  format: uuid
                  description: Unique identifier of the product
                ProductVariationId:
                  type: string
                  format: uuid
                  description: Unique identifier of the product variation
                Count:
                  type: integer
                  description: Number of items in stock
              required:
                - ProductId
                - ProductVariationId
                - Count
      responses:
        "200":
          description: Inventory item updated successfully
        "400":
          description: Invalid inventory data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Inventory item not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error
  
    delete:
      tags:
        - inventory
      summary: Delete inventory item
      description: Deletes an inventory item from the system.
      parameters:
        - name: inventoryId
          in: path
          required: true
          description: Unique identifier of the inventory item
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Inventory item removed successfully
        "400":
          description: Invalid request
        "404":
          description: Inventory item not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission (Only Admin)
        "405":
          description: Method not supported
        "500":
          description: Internal server error