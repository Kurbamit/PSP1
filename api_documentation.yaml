openapi: 3.0.3
info:
  title: Swagger [Project name] - OpenAPI 3.0
  description: |-
  version: 1.0.12
servers:
  - url: "/"
tags:
  - name: order
    description: Operations related to Orders
  - name: payment
    description: Operations related to Payments
  - name: employee
    description: Operations related to Employee management
  - name: auth
    description: Authentication and Authorization

paths:
  /auth/token:
    post:
      tags:
        - auth
      summary: Generate access token for customers, managers, or admins
      description: Authenticates the user and generates a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "user_name"
                password:
                  type: string
                  format: password
                  example: "password"
              required:
                - username
                - password
      responses:
        "200":
          description: Token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The JWT token to be used for subsequent authenticated requests
        "401":
          description: Unauthorized, invalid credentials
        "500":
          description: Internal server error

  /orders:
    post:
      tags:
        - order
      summary: Create a new order
      description: Employee creates a new order for a customer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: ID of the customer placing the order
                items:
                  type: array
                  description: List of items in the order
                  items:
                    type: object
                    properties:
                      product_id:
                        type: string
                        description: Product ID
                      quantity:
                        type: integer
                        description: Quantity of the product
                discount_id:
                  type: string
                  description: Optional discount applied to the order
              required:
                - customer_id
                - items
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: string
                    description: ID of the created order
        "400":
          description: Invalid input data
        "500":
          description: Internal server error

  /orders/{order_id}:
    put:
      tags:
        - order
      summary: Modify an open order
      description: Employee modifies the items or discount in an open order.
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            description: The ID of the order to modify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  description: List of items in the order
                  items:
                    type: object
                    properties:
                      product_id:
                        type: string
                        description: Product ID
                      quantity:
                        type: integer
                        description: Quantity of the product
                discount_id:
                  type: string
                  description: Optional discount applied to the order
      responses:
        "200":
          description: Order updated successfully
        "400":
          description: Invalid input or order status not open
        "404":
          description: Order not found
        "500":
          description: Internal server error

    delete:
      tags:
        - order
      summary: Cancel an open order
      description: Employee cancels an open order. Closed or paid orders cannot be canceled.
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            description: The ID of the order to cancel
      responses:
        "200":
          description: Order canceled successfully
        "400":
          description: Order is not open or already paid
        "404":
          description: Order not found
        "500":
          description: Internal server error

  /payments:
    post:
      tags:
        - payment
      summary: Process a payment for an order
      description: Processes a payment for an open order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ID of the order being paid
                payments:
                  type: array
                  description: List of payments (split payments allowed)
                  items:
                    type: object
                    properties:
                      method:
                        type: string
                        enum: [Cash, Card, GiftCard]
                        description: Payment method
                      amount:
                        type: number
                        format: double
                        description: Amount paid
                      gift_card_code:
                        type: string
                        description: Gift card code, required if the method is GiftCard
              required:
                - order_id
                - payments
      responses:
        "200":
          description: Payment processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  receipt_url:
                    type: string
                    description: URL to the final receipt
        "400":
          description: Invalid payment details or order status not open
        "500":
          description: Internal server error

  /employees:
    post:
      tags:
        - employee
      summary: Create a new employee
      description: Creates a new employee and puts old data into EmployeeAudit table with DB triggers.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: First name of the employee
                surname:
                  type: string
                  description: Last name of the employee
                userTypeEnum:
                  type: integer
                  description: User type enum from UserTypeEnum
                business_id:
                  type: string
                  description: ID of the business the employee belongs to
              required:
                - name
                - surname
                - userTypeEnum
                - business_id
      responses:
        "201":
          description: Employee created successfully
        "400":
          description: Invalid employee data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

    put:
      tags:
        - employee
      summary: Update existing employee
      description: Updates existing employee and puts old data into EmployeeAudit table with DB triggers.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: First name of the employee
                surname:
                  type: string
                  description: Last name of the employee
                userTypeEnum:
                  type: integer
                  description: User type enum from UserTypeEnum
                business_id:
                  type: string
                  description: ID of the business the employee belongs to
              required:
                - name
                - surname
                - userTypeEnum
                - business_id
      responses:
        "200":
          description: Employee edited successfully
        "400":
          description: Invalid employee data
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "404":
          description: Original employee not found
        "405":
          description: Method not supported
        "422":
          description: Invalid data
        "500":
          description: Internal server error

    get:
      tags:
        - employee
      summary: Retrieve a list of employees
      description: Fetches a list of employees.
      parameters:
        - name: resultCount
          in: query
          description: Maximum length of returned list
          required: true
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Page index number
          required: true
          schema:
            type: integer
        - name: orderingColumn
          in: query
          description: Ordering column name
          required: true
          schema:
            type: string
        - name: orderingDirection
          in: query
          description: Ordering direction (0 - asc, 1 - desc)
          required: true
          schema:
            type: integer
        - name: name
          in: query
          description: Filter employees by their first name
          required: false
          schema:
            type: string
        - name: surname
          in: query
          description: Filter employees by their last name
          required: false
          schema:
            type: string
        - name: userTypeEnum
          in: query
          description: Filter employees by their user type enum
          required: false
          schema:
            type: integer
        - name: businessId
          in: query
          description: Filter employees by business ID
          required: false
          schema:
            type: string
        - name: userType
          in: query
          description: User type enum value
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: A list of employees retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique ID of the employee
                    name:
                      type: string
                      description: First name of the employee
                    surname:
                      type: string
                      description: Last name of the employee
                    userTypeEnum:
                      type: integer
                      description: User type enum from UserTypeEnum
                    business_id:
                      type: string
                      description: ID of the business the employee belongs to
        "400":
          description: Invalid request
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error

  /employees/{employeeId}:
    get:
      tags:
        - employee
      summary: Retrieve a single employee by ID
      description: Fetches an employee's details based on the provided employee ID.
      parameters:
        - name: employeeId
          in: path
          required: true
          description: Unique identifier of the employee
          schema:
            type: string
      responses:
        "200":
          description: Employee details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID of the employee
                  name:
                    type: string
                    description: First name of the employee
                  surname:
                    type: string
                    description: Last name of the employee
                  userTypeEnum:
                    type: integer
                    description: User type enum from UserTypeEnum
                  business_id:
                    type: string
                    description: ID of the business the employee belongs to
        "400":
          description: Invalid request
        "404":
          description: Employee not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error

    delete:
      tags:
        - employee
      summary: Delete employee from working DB table
      description: Deletes employee data from working table and puts old data into EmployeeAudit table with DB triggers.
      parameters:
        - name: employeeId
          in: path
          required: true
          description: Unique identifier of the employee
          schema:
            type: string
      responses:
        "204":
          description: Employee removed successfully
        "400":
          description: Invalid request
        "404":
          description: Employee not found
        "401":
          description: Unauthenticated user
        "403":
          description: No permission
        "405":
          description: Method not supported
        "500":
          description: Internal server error
